# Development env for the projects.
## @see: https://github.com/wodby/docker4drupal

version: "3.8"

services:
  php:
    # Linux| 1000:1000
    image: brainsum/k8sdemo:1.2.0
    #    # Mac| 501:20
    #    image: wodby/drupal-php:7.3-dev-macos-4.14.3
    environment:
      PHP_SENDMAIL_PATH: /usr/sbin/sendmail -t -i -S mailhog:1025
      # PHP_SENDMAIL_PATH: /usr/sbin/sendmail -t -i -S opensmtpd:25
      PHP_FPM_USER: wodby
      PHP_FPM_GROUP: wodby
      ## Custom
      PHP_POST_MAX_SIZE: "500M"
      PHP_UPLOAD_MAX_FILESIZE: "500M"
      DRUSH_SITE_URI: "${PROJECT_BASE_URL}:8000"
      ##
    ## Read instructions at https://wodby.com/docs/stacks/php/local/#xdebug
    #      PHP_XDEBUG: 1
    #      PHP_XDEBUG_DEFAULT_ENABLE: 1
    #      PHP_XDEBUG_REMOTE_CONNECT_BACK: 0
    #      PHP_IDE_CONFIG: serverName=my-ide
    #      PHP_XDEBUG_IDEKEY: "my-ide"
    #      PHP_XDEBUG_REMOTE_HOST: host.docker.internal # Docker 18.03+ Mac/Win
    #      PHP_XDEBUG_REMOTE_HOST: 172.17.0.1 # Linux
    #      PHP_XDEBUG_REMOTE_HOST: 10.254.254.254 # macOS, Docker < 18.03
    #      PHP_XDEBUG_REMOTE_HOST: 10.0.75.1 # Windows, Docker < 18.03
    #      PHP_XDEBUG_REMOTE_LOG: /tmp/php-xdebug.log
    ## PHPUnit Drupal testing configurations
    #      SIMPLETEST_BASE_URL: "http://nginx"
    #      SIMPLETEST_DB: "mysql://drupal:drupal@mariadb/drupal#tests_"
    #      MINK_DRIVER_ARGS_WEBDRIVER: '["chrome", {"browserName":"chrome","goog:chromeOptions":{"args":["--disable-gpu","--headless"]}}, "http://chrome:9515"]'

#    volumes:
#      - ./:/var/www/html
  ## For macOS users (https://wodby.com/docs/stacks/drupal/local#docker-for-mac)
  #      - ./:/var/www/html:cached # User-guided caching
  #      - docker-sync:/var/www/html # Docker-sync
  ## For XHProf and Xdebug profiler traces
  #      - files:/mnt/files

  nginx:
    image: brainsum/k8sdemo-nginx:1.2.0
    depends_on:
      - php
    environment:
      NGINX_STATIC_OPEN_FILE_CACHE: "off"
      NGINX_ERROR_LOG_LEVEL: debug
      NGINX_BACKEND_HOST: php
      NGINX_SERVER_ROOT: /var/www/html/web
      NGINX_VHOST_PRESET: drupal8
      ## Custom
      NGINX_CLIENT_MAX_BODY_SIZE: "500m"
      ##
    #      NGINX_DRUPAL_FILE_PROXY_URL: http://example.com
    volumes:
      - ./upstream.conf:/etc/nginx/upstream.conf
#      - ./:/var/www/html
    # For macOS users (https://wodby.com/docs/stacks/drupal/local#docker-for-mac)
    #      - ./:/var/www/html:cached # User-guided caching
    #      - docker-sync:/var/www/html # Docker-sync
    labels:
      - "traefik.http.routers.${PROJECT_NAME}_nginx.rule=Host(`${PROJECT_BASE_URL}`)"

#  ## <-- INGRESS --> ##

  traefik:
    image: traefik:v2.1.2
    command: --api.insecure=true --providers.docker
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

#  ## <-- STORAGE --> ##

#  minio:
#    image: minio/minio:RELEASE.2020-07-27T18-37-02Z
#    user: 1000:1000
#    environment:
#      MINIO_ACCESS_KEY: "AKIAIOSFODNN7EXAMPLE"
#      MINIO_SECRET_KEY: "wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY"
#    ports:
#    - 9000:9000
#    command: ['server', '/data'] # @todo?: server http://minio/data
#    volumes:
#    - minio_data:/data
#    healthcheck:
#      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
#      interval: 30s
#      timeout: 20s
#      retries: 3

#  ## <-- DATABASE --> ##

  mariadb:
    image: wodby/mariadb:10.4-3.7.1
    stop_grace_period: 30s
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: drupal
      MYSQL_USER: drupal
      MYSQL_PASSWORD: drupal
  #    volumes:
  #      - ./mariadb-init:/docker-entrypoint-initdb.d # Place init .sql file(s) here.
  #      - /path/to/mariadb/data/on/host:/var/lib/mysql # Use bind mount

#  ## <-- CACHING --> ##
  redis:
    image: wodby/redis:6-3.4.2

#  ## <-- SEARCH --> ##
  solr:
    image: wodby/solr:8-4.6.1
    environment:
      SOLR_DEFAULT_CONFIG_SET: search_api_solr_4.0
      SOLR_HEAP: 1024m
    labels:
    - "traefik.http.services.${PROJECT_NAME}_solr.loadbalancer.server.port=8983"
    - "traefik.http.routers.${PROJECT_NAME}_solr.rule=Host(`solr.${PROJECT_BASE_URL}`)"

#  ## <-- MAIL --> ##

  mailhog:
    image: mailhog/mailhog
    labels:
      - "traefik.http.services.${PROJECT_NAME}_mailhog.loadbalancer.server.port=8025"
      - "traefik.http.routers.${PROJECT_NAME}_mailhog.rule=Host(`mailhog.${PROJECT_BASE_URL}`)"

#  ## <-- LOGGING --> ##
# @todo: Maybe try https://medium.com/the-devs-tech/logging-with-fluent-bit-influxdb-282c9bc35245
  loki:
    image: grafana/loki:1.5.0
    command: -config.file=/etc/loki/local-config.yaml

  # @todo: Might not be needed or should be replaced with fluentbit.
  promtail:
    image: grafana/promtail:1.5.0
    volumes:
      - promtail_data:/var/log
    command: -config.file=/etc/promtail/docker-config.yaml

  grafana:
    image: grafana/grafana:7.1.1
    labels:
      - "traefik.http.services.${PROJECT_NAME}_grafana.loadbalancer.server.port=3000"
      - "traefik.http.routers.${PROJECT_NAME}_grafana.rule=Host(`grafana.${PROJECT_BASE_URL}`)"

volumes:
  promtail_data: {}
  minio_data: {}
