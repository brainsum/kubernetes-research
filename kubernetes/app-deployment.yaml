apiVersion: apps/v1
kind: Deployment
metadata:
  name: demok8s-app
  namespace: demok8s
  labels:
    app: demok8s-app
spec:
  replicas: 3
  selector:
    matchLabels:
      app: demok8s-app
  template:
    metadata:
      labels:
        app: demok8s-app
    spec:
      securityContext:
        fsGroup: 1000
      #  imagePullSecrets:
      #    - name: acr-auth
      containers:
        - image: brainsum/k8sdemo:1.2.0
          imagePullPolicy: "IfNotPresent"
          name: drupal
#          # @todo: In a rolling update this is going to break some containers (new db -> old code).
#          # @todo: Rollback is also not possible (db is gonna stay the same).
#          lifecycle:
#            postStart:
#              exec:
#                command:
#                  - "drush updb -y && drush cim -y && drush cim -y && drush cr && drush cron"
          env:
            - name: DRUPAL_DATABASE_HOST
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: database.host
            - name: DRUPAL_DATABASE_PORT
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: database.port
            - name: DRUPAL_DATABASE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: drupal-database-mariadb
                  key: mariadb-username
            - name: DRUPAL_DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: drupal-database-mariadb
                  key: mariadb-password
            - name: DRUPAL_DATABASE_NAME
              valueFrom:
                secretKeyRef:
                  name: drupal-database-mariadb
                  key: mariadb-db-name
            - name: DRUPAL_HASH_SALT
              valueFrom:
                secretKeyRef:
                  name: app-secret
                  key: drupal-hash-salt
            - name: DRUSH_SITE_URI
              valueFrom:
                secretKeyRef:
                  name: app-secret
                  key: drush-site-uri
            - name: REDIS_HOST
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: cache.host
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-secret
                  key: redis-password
            - name: LOGGING_URI
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: log.uri
          ports:
            - name: fastcgi
              containerPort: 9000
              protocol: TCP
          volumeMounts:
            - name: drupal-data
              mountPath: /var/www/html/private_files
              subPath: private_files
            - name: drupal-data
              mountPath: /var/www/html/web/sites/default/files
              subPath: files
          resources:
            requests:
              cpu: "10m"
              memory: "32Mi"
            limits:
              cpu: "800m"
              memory: "512Mi"

        - image: brainsum/k8sdemo-nginx:1.2.0
          imagePullPolicy: "IfNotPresent"
          name: nginx
          env:
            - name: NGINX_STATIC_OPEN_FILE_CACHE
              value: "off"
            - name: NGINX_ERROR_LOG_LEVEL
              value: debug
            - name: NGINX_BACKEND_HOST
              value: "localhost:9000"
            - name: NGINX_SERVER_ROOT
              value: /var/www/html/web
            - name: NGINX_CLIENT_MAX_BODY_SIZE
              value: "500m"
          ports:
            - name: http
              containerPort: 80
          volumeMounts:
            - name: drupal-data
              mountPath: /var/www/html/private_files
              subPath: private_files
            - name: drupal-data
              mountPath: /var/www/html/web/sites/default/files
              subPath: files
          resources:
            requests:
              cpu: "10m"
              memory: "32Mi"
            limits:
              cpu: "200m"
              memory: "128Mi"
      # @todo: Does this handle multiple containers writing at the same time?
      volumes:
        - name: drupal-data
          persistentVolumeClaim:
            claimName: demok8s-app-pvc
